#!/bin/bash
"""
Script de ejemplo para probar el endpoint /api/auth/validate-password/ usando curl
"""

echo "üîê PRUEBA DEL ENDPOINT /api/auth/validate-password/"
echo "============================================================"

BASE_URL="http://localhost:8000"
TOKEN_URL="$BASE_URL/api/token/"
VALIDATE_URL="$BASE_URL/api/auth/validate-password/"

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Nota: Aseg√∫rate de que el servidor Django est√© ejecut√°ndose en el puerto 8000${NC}"
echo

# Ejemplo 1: Obtener token
echo "1. üìã EJEMPLO: Obtener token de autenticaci√≥n"
echo "curl -X POST $TOKEN_URL \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"username\": \"tu_usuario\", \"password\": \"tu_contrase√±a\"}'"
echo

# Ejemplo 2: Validar contrase√±a correcta
echo "2. ‚úÖ EJEMPLO: Validar contrase√±a correcta"
echo "curl -X POST $VALIDATE_URL \\"
echo "  -H \"Authorization: Token tu_token_aqui\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"password\": \"tu_contrase√±a\"}'"
echo

# Ejemplo 3: Validar contrase√±a incorrecta
echo "3. ‚ùå EJEMPLO: Validar contrase√±a incorrecta"
echo "curl -X POST $VALIDATE_URL \\"
echo "  -H \"Authorization: Token tu_token_aqui\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"password\": \"contrase√±a_incorrecta\"}'"
echo

# Ejemplo 4: Sin contrase√±a
echo "4. ‚ö†Ô∏è  EJEMPLO: Sin contrase√±a"
echo "curl -X POST $VALIDATE_URL \\"
echo "  -H \"Authorization: Token tu_token_aqui\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{}'"
echo

# Ejemplo 5: Sin autenticaci√≥n
echo "5. üö´ EJEMPLO: Sin autenticaci√≥n"
echo "curl -X POST $VALIDATE_URL \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"password\": \"cualquier_contrase√±a\"}'"
echo

echo "============================================================"
echo -e "${GREEN}üìä RESPUESTAS ESPERADAS:${NC}"
echo
echo -e "${GREEN}‚úÖ Contrase√±a v√°lida (200 OK):${NC}"
echo '{
  "message": "Contrase√±a v√°lida",
  "valid": true,
  "user": {
    "id": 1,
    "username": "usuario",
    "email": "usuario@email.com",
    "role": "Administrador"
  }
}'
echo

echo -e "${RED}‚ùå Contrase√±a incorrecta (400 Bad Request):${NC}"
echo '{
  "error": "Contrase√±a incorrecta",
  "valid": false
}'
echo

echo -e "${RED}‚ùå Sin contrase√±a (400 Bad Request):${NC}"
echo '{
  "error": "La contrase√±a es requerida",
  "valid": false
}'
echo

echo -e "${RED}‚ùå Sin autenticaci√≥n (401 Unauthorized):${NC}"
echo '{
  "detail": "Authentication credentials were not provided."
}'
echo

echo "============================================================"
echo -e "${YELLOW}üí° CASOS DE USO:${NC}"
echo "‚Ä¢ Confirmar identidad antes de eliminar registros importantes"
echo "‚Ä¢ Validar usuario antes de operaciones cr√≠ticas"
echo "‚Ä¢ Doble verificaci√≥n en transacciones sensibles"
echo "‚Ä¢ Confirmar permisos administrativos"
